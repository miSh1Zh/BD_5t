services:
  postgres:
    hostname: ${DB_HOST}
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_PORT=${DB_PORT}
    build: 
      context: .
      dockerfile: Dockerfile_postgres
    restart: always
    volumes:
      - ./migrations:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    command: -p ${DB_PORT}
    ports:
      - 5432:${DB_PORT}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    command: --port ${REDIS_PORT}
    ports:
      - 6379:${REDIS_PORT}
    volumes:
      - redis_data:/data

  app:
    build: 
      context: .
      dockerfile: Dockerfile_app
    restart: always
    volumes:
      - ./src:/src
    ports:
      - 8501:8501
    environment:
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - POOL_MIN_CONN=${POOL_MIN_CONN}
      - POOL_MAX_CONN=${POOL_MAX_CONN}

      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}

      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=${JWT_ACCESS_TOKEN_EXPIRE_MINUTES}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

volumes:
  redis_data:
  postgres_data: